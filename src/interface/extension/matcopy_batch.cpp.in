/***************************************************************************
 *
 *  @license
 *  Copyright (C) Codeplay Software Limited
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  For your convenience, a copy of the License has been included in this
 *  repository.
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  SYCL-BLAS: BLAS implementation using SYCL
 *
 *  @filename matcopy.cpp.in
 *
 **************************************************************************/

#include "interface/extension_interface.hpp"
#include "sb_handle/kernel_constructor.hpp"
#include "sb_handle/sycl_blas_handle.hpp"
#include "operations/extension/matcopy_batch.hpp"
#include "operations/extension/transpose.hpp" 

namespace blas {
namespace internal {

// This function represents both imatcopy and omatcopy operators
template typename SB_Handle::event_t _matcopy_batch<true>(
    SB_Handle& sb_handle, char trans, ${INDEX_TYPE} m, ${INDEX_TYPE} n,
    ${DATA_TYPE} alpha, ${container_t0} in_memory, ${INDEX_TYPE} ld_in,
    ${INDEX_TYPE} in_stride, ${container_t0} out_memory, ${INDEX_TYPE} ld_out,
    ${INDEX_TYPE} out_stride, ${INDEX_TYPE} batch_size);

// This function represents both imatcopy and omatcopy operators
template typename SB_Handle::event_t _matcopy_batch<false>(
    SB_Handle& sb_handle, char trans, ${INDEX_TYPE} m, ${INDEX_TYPE} n,
    ${DATA_TYPE} alpha, ${container_t0} in_memory, ${INDEX_TYPE} ld_in,
    ${INDEX_TYPE} in_stride, ${container_t0} out_memory, ${INDEX_TYPE} ld_out,
    ${INDEX_TYPE} out_stride, ${INDEX_TYPE} batch_size);

}  // namespace internal
}  // namespace blas
